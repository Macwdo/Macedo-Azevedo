version: '3.8'

services:
  ma_app:
    container_name: ma_app
    image: macwdo/ma_app:latest
    ports:
      - "8000:8000"
    stdin_open: true 
    tty: true
    command: python manage.py runserver 0.0.0.0:8000
    env_file: .env
    volumes:
      - ./code:/home/app
    depends_on:
      - db_ma_app
      - rmq_ma_app
      - nginx_ma_app

  nginx_ma_app:
    container_name: nginx_ma_app
    build:
      context: nginx/
      dockerfile: Dockerfile
    volumes:
      - ./code/staticfiles:/home/app/staticfiles
    ports:
      - 80:80
      
  db_ma_app:
    container_name: db_ma_app
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: 12345
      POSTGRES_USER: postgres
      POSTGRES_DB: db_app
    ports:
      - "5431:5432"

  rmq_ma_app:
   container_name: rmq_ma_app
   image: rabbitmq:latest
   restart: always
   ports:
     - 5672:5672
     - 8080:15672

  worker_ma_app:
   container_name: worker_ma_app
   image: macwdo/ma_app:latest
   command: celery -A project worker --loglevel=INFO
   volumes:
     - ./code:/home/app
   env_file: .env
   restart: always
   depends_on:
     - rmq_ma_app

  beat_ma_app:
   container_name: beat_ma_app
   image: macwdo/ma_app:latest
   command: celery -A project beat -l debug
   volumes:
     - ./code:/home/app

   env_file: .env
   restart: always
   depends_on:
     - worker_ma_app
     - rmq_ma_app

  flower_ma_app:
   container_name: flower_ma_app
   image: macwdo/ma_app:latest
   command: celery -A project flower
   volumes:
     - flower_data:/data
   ports:
     - "5555:5555"
   env_file: .env
   restart: always
   depends_on:
     - rmq_ma_app
     - worker_ma_app
     - beat_ma_app

volumes:
  postgres_data:
  flower_data: