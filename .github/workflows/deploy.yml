name: Django CD

on:
  push:
    branches: [ "main" ]

jobs:

  build_ci:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Dotenv Action
        uses: falti/dotenv-action@v1.0.1
        with:
          path: .envexample
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r code/requirements.txt

  build:
    runs-on: ubuntu-latest
    needs: build_ci
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: |
          docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASSWORD
          docker build . -t macedoazevedoapp:latest
          docker tag macedoazevedoapp:latest macwdo/macedoazevedoapp:latest 
          docker push macwdo/macedoazevedoapp:latest
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: "Deploy to prod"

    steps:
      - name: Checkout Files
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/prod.key
          chmod 600 ~/.ssh/prod.key
          cat >>~/.ssh/config <<END
          Host prod
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/prod.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          ENV_VARIABLES: ${{ secrets.ENV_VARIABLES }}

      - name: Down app and cleaning
        run: | 
          ssh prod 'if [ -n "$(docker ps -q)" ]; then docker kill $(docker ps -q);fi'
          ssh prod 'docker system prune --force'

      - name: Pulling image from Dockerhub
        run: ssh prod "docker pull macwdo/macedoazevedoapp:latest"

      - name: Up app
        run: ssh prod "docker run --env-file ./.env -p 80:8000 -d macwdo/macedoazevedoapp:latest"

      - name: Collect static
        run: ssh prod "docker exec -it $(docker ps -q) sh -c 'python manage.py collectstatic'"
